{"version":3,"sources":["components/base/LinkList.js","components/splash/Navigation.js","components/splash/Education.js","components/splash/Donation.js","components/splash/SplashPage.js","App.js","serviceWorker.js","index.js"],"names":["LinkList","linksArr","className","map","item","i","key","target","rel","href","link","title","Navigation","Education","Donation","SplashPage","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+TAceA,MAZf,YAAiC,IAAbC,EAAY,EAAZA,SAChB,OACI,yBAAKC,UAAU,SACVD,EAASE,KAAI,SAACC,EAAMC,GACjB,OACI,uBAAGC,IAAKD,GAAG,uBAAGE,OAAO,SAASC,IAAI,WAAWC,KAAML,EAAKM,MAAON,EAAKO,a,MCYzEC,MAdf,WAOI,OACI,yBAAKV,UAAU,cACX,kBAAC,EAAD,CAAUD,SARA,CACd,CACIS,KAAM,0BACNC,MAAO,6B,MCkCJE,MAtCf,WA6BI,OACI,yBAAKX,UAAU,aACX,2GACA,wGAA6E,6BAA7E,QACA,kBAAC,EAAD,CAAUD,SAhCA,CACd,CACIS,KAAM,8JACNC,MAAO,8CACR,CACCD,KAAM,8FACNC,MAAO,0CACR,CACCD,KAAM,8BACNC,MAAO,oBACR,CACCD,KAAM,gCACNC,MAAO,kBACR,CACCD,KAAM,qCACNC,MAAO,uCACR,CACCD,KAAM,4FACNC,MAAO,mCACR,CACCD,KAAM,8BACNC,MAAO,kCACR,CACCD,KAAM,uCACNC,MAAO,sB,MCMJG,MA/Bf,WAuBI,OACI,yBAAKZ,UAAU,YACX,4DACA,kBAAC,EAAD,CAAUD,SAzBA,CACd,CACIS,KAAM,uCACNC,MAAO,qBACR,CACCD,KAAM,2BACNC,MAAO,oBACR,CACCD,KAAM,oCACNC,MAAO,iCACR,CACCD,KAAM,yJACNC,MAAO,6CACR,CACCD,KAAM,wCACNC,MAAO,0BACR,CACCD,KAAM,gIACNC,MAAO,+B,MCAJI,MAhBf,WACI,OACI,yBAAKb,UAAU,eACX,yBAAKA,UAAU,UACX,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,UACX,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,eACX,kBAAC,EAAD,SCNDc,MARf,WACE,OACE,yBAAKd,UAAU,OACb,kBAAC,EAAD,QCKce,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.eb9fe15d.chunk.js","sourcesContent":["import React from 'react';\n\nfunction LinkList({ linksArr }) {\n    return (\n        <div className='links'>\n            {linksArr.map((item, i) => {\n                return (\n                    <p key={i}><a target='_blank' rel='noopener' href={item.link}>{item.title}</a></p>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default LinkList;","import React from 'react';\nimport LinkList from '../base/LinkList'\n\nimport '../../style/splash/Navigation.css'\n\nfunction Navigation() {\n    const pageLinks = [\n        {\n            link: 'http://eyequest.online/',\n            title: 'EYEQUEST ONLINE ZINE'\n        }\n    ]\n    return (\n        <div className='navigation'>\n            <LinkList linksArr={pageLinks} />\n        </div>\n    )\n}\n\nexport default Navigation;","import React from 'react';\nimport LinkList from '../base/LinkList'\n\nimport '../../style/splash/Education.css'\n\nfunction Education() {\n    const pageLinks = [\n        {\n            link: 'https://www.showingupforracialjustice.org/white-supremacy-culture-characteristics.html?fbclid=IwAR3mpybf0V2BU4ZVH10vCDdoLjlhjTRyKF1jbEHQCsNpS3gK6-5FuKxFSYw',\n            title: 'CHARACTERISTICS OF WHITE SUPREMACY CULTURE'\n        }, {\n            link: 'https://docs.google.com/document/d/1BRlF2_zhNe86SGgHa6-VlBO-QgirITwCTugSfKie5Fs/mobilebasic',\n            title: 'ANTI RACISM RESOURCES FOR WHITE PEOPLE'\n        }, {\n            link: 'https://writeaprisoner.com/',\n            title: 'WRITE A PRISONER'\n        }, {\n            link: 'https://www.blackandpink.org/',\n            title: 'BLACK AND PINK'\n        }, {\n            link: 'http://www.abcf.net/prisoner-info/',\n            title: 'ANARCHIST BLACK CROSS PRSIONER LIST'\n        }, {\n            link: 'https://www.mpd150.com/what-are-we-talking-about-when-we-talk-about-a-police-free-future/',\n            title: 'POLICE FREE FUTURE? ABC’S!'\n        }, {\n            link: 'https://www.mpd150.com/faq/',\n            title: 'FAQ’S OF POLICE ABOLITION'\n        }, {\n            link: 'https://bookshop.org/shop/elizabeths',\n            title: 'READING LISTS'\n        },\n    ]\n\n    return (\n        <div className='education'>\n            <h2>IN SOLIDARITY WITH THE BLACK LIVES MATTER MOVEMENT WE OFFER THESE RESOURCES</h2>\n            <p>>>>>> Please take a moment to read through before continuing to the zine. <br />>>>></p>\n            <LinkList linksArr={pageLinks} />\n        </div >\n    )\n}\n\nexport default Education;","import React from 'react';\nimport LinkList from '../base/LinkList'\n\nimport '../../style/splash/Donation.css'\n\nfunction Donation() {\n    const pageLinks = [\n        {\n            link: 'https://www.reclaimtheblock.org/home',\n            title: 'RECLAIM THE BLOCK'\n        }, {\n            link: 'https://bailproject.org/',\n            title: 'THE BAIL PROJECT'\n        }, {\n            link: 'https://www.atlantamutualaid.org/',\n            title: 'METRO ATLANTA MUTUAL AID FUND'\n        }, {\n            link: 'https://www.gofundme.com/f/formerly-incarcerated-small-business-rescue-fund?utm_source=customer&utm_campaign=m_pd+share-sheet&utm_medium=copy_link-tip',\n            title: 'FORMERLY INCARCERATED SMALL BUSINESS FUND'\n        }, {\n            link: 'https://www.housingjusticeleague.org/',\n            title: 'HOUSING JUSTICE LEAGUE'\n        }, {\n            link: 'https://www.gofundme.com/f/homeless-black-trans-women-fund?utm_source=twitter&utm_medium=social&utm_campaign=p_cp+share-sheet',\n            title: 'BLACK TRANS WOMAN FUND'\n        },\n    ]\n\n    return (\n        <div className='donation'>\n            <h1>PLACES TO PUT YOUR $ SUPPORT</h1>\n            <LinkList linksArr={pageLinks} />\n        </div>\n    )\n}\n\nexport default Donation;","import React from 'react';\nimport Navigation from './Navigation'\nimport Education from './Education'\nimport Donation from './Donation'\n\nimport '../../style/splash/SplashPage.css'\n\n\nfunction SplashPage() {\n    return (\n        <div className='splash-page'>\n            <div className='column'>\n                <Education />\n            </div>\n            <div className='column'>\n                <Navigation />\n            </div>\n            <div className='column col3'>\n                <Donation />\n            </div>\n        </div>\n    )\n}\n\nexport default SplashPage;","import React from 'react';\nimport './App.css';\nimport SplashPage from './components/splash/SplashPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SplashPage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}